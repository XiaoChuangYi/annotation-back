<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.malgo.annotation.mapper.AnnotationEvaluateInterface">

  <resultMap type="cn.malgo.annotation.vo.AnnotationEstimateVO" id="listResultMap">
    <result column="task_id" property="taskId"/>
    <result column="task_name" property="taskName"/>
    <result column="assignee" property="assignee"/>
    <result column="account_name" property="accountName"/>
    <result column="gmt_modified" property="gmtModified"/>
    <result column="finish_word_num" property="finishWordNum"/>
    <result column="rest_word_num" property="restWordNum"/>
    <result column="finish_branch" property="finishBranch"/>
    <result column="rest_branch" property="restBranch"/>
    <result column="total_branch" property="totalBranch"/>
    <result column="total_word_num" property="totalWordNum"/>
    <result column="in_conformity" property="inConformity"/>
  </resultMap>

  <select id="listAnnotationEstimateSummary" resultMap="listResultMap">
    SELECT
    task_id,
    name AS task_name,
    assignee,
    account_name ,
    main.gmt_modified ,
    sum(finish_word_num) AS finish_word_num,
    sum(rest_word_num) AS rest_word_num,
    sum(finish_branch) AS finish_branch,
    sum(rest_branch) AS rest_branch,
    sum(total_branch) AS total_branch,
    sum(total_word_num) AS total_word_num,
    ifnull(
    1 - (sum(examine_pass_branch) / sum(total_examine_branch)),0) AS in_conformity
    FROM (
    SELECT
    task_id,
    name,
    gmt_modified,
    assignee,
    sum(ifnull(CASE
    WHEN anno.state IN ('preExamine')
    THEN length(term)
    END, 0)) AS finish_word_num,
    sum(ifnull(CASE
    WHEN anno.state IN ('annotationProcessing', 'preAnnotation')
    THEN length(term)
    END, 0)) AS rest_word_num,
    ifnull(CASE WHEN anno.state IN ('preExamine')
    THEN COUNT(anno.id)
    END, 0) AS finish_branch,
    ifnull(CASE
    WHEN anno.state IN ('annotationProcessing', 'preAnnotation')
    THEN count(anno.id)
    END, 0) AS rest_branch,
    ifnull(CASE WHEN anno.state IN ('examinePass')
    THEN count(anno.id) END, 0) AS examine_pass_branch,
    ifnull(CASE WHEN anno.state IN
    ('examinePass', 'abandon', 'innerAnnotation', 'errorPass')
    THEN count(anno.id) END, 0) AS total_examine_branch,
    ifnull(
    CASE WHEN anno.state IN ('preExamine', 'annotationProcessing', 'preAnnotation')
    THEN count(anno.id) END, 0) AS total_branch,
    sum(ifnull(CASE WHEN anno.state IN
    ('preExamine', 'annotationProcessing', 'preAnnotation')
    THEN length(term) END, 0)) AS total_word_num
    FROM annotation_task_doc taskDoc
    LEFT JOIN annotation_task_doc_block taskDocBlock
    ON taskDoc.id = taskDocBlock.task_doc_id
    LEFT JOIN annotation_task_block block
    ON taskDocBlock.block_id = block.id
    INNER JOIN annotation_combine anno
    ON anno.annotation_type = block.annotation_type AND anno.term = block.text
    INNER JOIN annotation_task task
    ON taskDoc.task_id = task.id
    WHERE task_id = ${task_id}
    <if test="gmt_modified !=null">
      AND gmt_modified=${gmt_modified}
    </if>
    <if test="assignee!=null and assignee !=0">
      AND assignee=${assignee}
    </if>
    GROUP BY assignee, anno.state) AS main INNER JOIN user_account
    ON main.assignee = user_account.id
    GROUP BY main.assignee
  </select>

</mapper>